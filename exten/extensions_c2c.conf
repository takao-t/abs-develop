[c2c-inside]
exten => _X.,1,NoOp(C2C_INSIDE)
exten => _X.,n,Set(EXT=${EXTEN})
exten => _X.,n,GoSub(macro-ext2peer,s,1)
;内線側のピアチェック
exten => _X.,n,GotoIf($["${PEER}"=""]?done)
;内線側の規正情報チェック
exten => _X.,n,Set(TGT=${CUT(PEER,/,1)})
exten => _X.,n,Set(LMT=${DB(ABS/LMT/${TGT})})
;外線発信不可なら切断する
exten => _X.,n,GotoIf($["${LMT}"=""]?done)
exten => _X.,n,GotoIf($[${LMT}<2]?done)
;C2Cの場合はオリジネータはABS
exten => _X.,n,Set(CALLERID(num)=9999)
exten => _X.,n,Set(CALLERID(name)=Click2Call)
exten => _X.,n,Set(EXTTECH=${DB(ABS/EXTTECH)})
exten => _X.,n,Dial(${EXTTECH}/${TGT})
exten => _X.,n(done),Hangup

[c2c-inhouse]
exten => _X.,1,NoOp(C2C_INSIDE)
exten => _X.,n,Set(EXT=${EXTEN})
exten => _X.,n,GoSub(macro-ext2peer,s,1)
;内線側のピアチェック
exten => _X.,n,GotoIf($["${PEER}"=""]?done)
;内線側の規正情報チェック
exten => _X.,n,Set(TGT=${CUT(PEER,/,1)})
exten => _X.,n,Set(LMT=${DB(ABS/LMT/${TGT})})
;発信不可なら切断する
exten => _X.,n,GotoIf($["${LMT}"=""]?done)
exten => _X.,n,GotoIf($[${LMT}<1]?done)
;C2Cの場合はオリジネータはABS
exten => _X.,n,Set(EXTTECH=${DB(ABS/EXTTECH)})
exten => _X.,n,Dial(${EXTTECH}/${TGT})
exten => _X.,n(done),Hangup

[c2c-outside]
exten => _X.,1,NoOp(C2Cプレフィクス発信)
exten => _X.,n,Set(C2COUT=YESC2C)
exten => _X.,n,Set(TMP=${DB(ABS/OGP1)})
exten => _X.,n,GotoIf($["${TMP}"=""]?chk2)
exten => _X.,n,Set(PFLL=${LEN(${TMP})})
exten => _X.,n,Set(PFNN=1)
exten => _X.,n,NoOp("${TMP}"="${EXTEN:0:${PFLL}}")
exten => _X.,n,GotoIf($["${TMP}"="${EXTEN:0:${PFLL}}"]?prefixout,${EXTEN},1)
exten => _X.,n(chk2),Set(TMP=${DB(ABS/OGP2)})
exten => _X.,n,GotoIf($["${TMP}"=""]?inter)
exten => _X.,n,Set(PFLL=${LEN(${TMP})})
exten => _X.,n,Set(PFNN=2)
exten => _X.,n,NoOp("${TMP}"="${EXTEN:0:${PFLL}}")
exten => _X.,n,GotoIf($["${TMP}"="${EXTEN:0:${PFLL}}"]?prefixout,${EXTEN},1)
exten => _X.,n,Hangup

;*56XXXXでのダイヤル
;オリジネータがAsteriskなので規制チェックしない
;(inside側で規制する)
exten => _*56[1-8].,1,NoOp(C2Cキー捕捉発信)
exten => _*56[1-8].,n,Gosub(macro-d56check,s,1)
;規制迂回措置
exten => _*56[1-8].,n,Set(C2COUT=YESC2C)
;発信処理へ
exten => _*56[1-8].,n,Set(DESTNUM=${EXTEN:4})
exten => _*56[1-8].,n,Set(KID=${EXTEN:3:1})
exten => _*56[1-8].,n,Goto(key-out-common,s,1)

;外線キー自動捕捉(自動スロット)
exten => _*57[1-4].,1,NoOp(C2Cキー捕捉発信)
exten => _*57[1-4].,n,Gosub(macro-d56check,s,1)
exten => _*57[1-4].,n,Set(C2COUT=YESC2C)
exten => _*57[1-4].,n,Set(DESTNUM=${EXTEN:4})
exten => _*57[1-4].,n,Set(CTK=${DB(ABS/D57KEY/${EXTEN:3:1})})
exten => _*57[1-4].,n,Set(KPSTART=${CUT(CTK,-,1)})
exten => _*57[1-4].,n,Set(KPEND=${CUT(CTK,-,2)})
exten => _*57[1-4].,n,Goto(key-out-auto,s,1)
exten => _*57[1-4].,n,GotoIf($["${KPSTART}"=""]?nogo)
exten => _*57[1-4].,n,GotoIf($["${KPEND}"=""]?nogo)
exten => _*57[1-4].,n,Goto(key-out-auto,s,1)
exten => _*57[1-4].,n(nogo),Congestion

;以下はQPMの疑似キー用
[c2c-lkey-inside]
;呼び出しは内線-キー番号なので注意
exten => _X.,1,NoOp(C2Cキー内側)
exten => _X.,n,Set(EXT=${CUT(EXTEN,-,1)})
exten => _X.,n,Set(KEY=${CUT(EXTEN,-,2)})
exten => _X.,n,Set(TECH=${DB(ABS/EXTTECH})
exten => _X.,n,GotoIf($[${EXT}==""]?done)
exten => _X.,n,GotoIf($[${KEY}==""]?done)
exten => _X.,n,GoSub(macro-ext2peer,s,1)
;内線側のピアチェック
exten => _X.,n,GotoIf($["${PEER}"=""]?done)
exten => _X.,n,Set(RPEER=${CUT(PEER,/,1)})
exten => _X.,n,Set(TGT=${TECH}/${RPEER})
;該当キーの状態チェック
;未使用ならキーをハント、ただし発信規制チェック
exten => _X.,n,GotoIf($["${DEVICE_STATE(Custom:KEYSYS${KEY})}"="NOT_INUSE"]?hunt)
;鳴動中ならピックアップ
exten => _X.,n,GotoIf($["${DEVICE_STATE(Custom:KEYSYS${KEY})}"="RINGING"]?pup)
;保留中ならピックアップ
exten => _X.,n,GotoIf($["${DEVICE_STATE(Custom:KEYSYS${KEY})}"="ONHOLD"]?pup)
;通話中なら自ピアかどうかチェックへ
exten => _X.,n,GotoIf($["${DEVICE_STATE(Custom:KEYSYS${KEY})}"="INUSE"]?chknxt)
;上記以外の状態なら切断
exten => _X.,n,Goto(toh)

;
;内線側の規制情報チェック
exten => _X.,n(hunt),Set(LMT=${DB(ABS/LMT/${RPEER})})
;外線発信不可なら切断する
exten => _X.,n,GotoIf($["${LMT}"=""]?done)
exten => _X.,n,GotoIf($[${LMT}<2]?done)
;C2Cの場合はオリジネータはABS
exten => _X.,n(pup),Set(CALLERID(num)=*56${KEY})
exten => _X.,n,Set(CALLERID(name)=KEY:${KEY})
exten => _X.,n,Dial(${TGT})
exten => _X.,n(done),Hangup
;使用中のピアチェック(自ピアなら保留させる)
exten => _X.,n(chknxt),NoOp(キー使用中)
exten => _X.,n,Set(KPEER=${DB(KEYTEL/KEYSYS${KEY}/PEER)})
exten => _X.,n,GotoIf($["${KPEER}"="${TGT}"]?toh)
;自ピアではないので切断
exten => _X.,n,Hangup
exten => _X.,n(toh),NoOp(保留処理)
exten => _X.,n,Set(PEEROVERRIDE=${TGT})
exten => _X.,n,Set(C2COUT=YESC2C)
;*56Xキーを呼び出す。要するにかけ逃げすれば保留される
exten => _X.,n,Set(KID=${KEY})
exten => _X.,n,Goto(key-handler,keyhandle,1)


[c2c-linekey]
;QPMからのラインキー処理(特殊なので注意)
;*56X-内線番号でラインキー捕捉(ハイフン要)
;オリジネータがAsteriskなので規制チェックしない
;(inside側で規制する)
exten => _*56[1-8]-.,1,NoOp(C2Cキー操作)
exten => _*56[1-8]-.,n,Gosub(macro-d56check,s,1)
;内線番号取り出し
exten => _*56[1-8]-.,n,Set(EXT=${CUT(EXTEN,-,2)})
;AstDBに登録されているピア取り出し
exten => _*56[1-8]-.,n,Gosub(macro-ext2peer,s,1)
;PJSIPなので/の前だけをピアとして使う
exten => _*56[1-8]-.,n,Set(PEEROVERRIDE=${CUT(PEER,/,1)})
exten => _*56[1-8]-.,n,GotoIf($["PEEEROVERRIDE"!=""]?doex)
exten => _*56[1-8]-.,n,Hangup
;規制迂回措置
exten => _*56[1-8]-.,n(doex),Set(C2COUT=YESC2C)
;キーへ
exten => _*56[1-8]-.,n,Set(KID=${EXTEN:3:1})
exten => _*56[1-8]-.,n,Goto(key-handler,keyhandle,1)
